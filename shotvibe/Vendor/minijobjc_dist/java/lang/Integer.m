//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/jre/java/lang/Integer.java
//
//  Created by raptor on 1/9/14.
//

#include "IOSClass.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Integer.h"
#include "java/lang/NullPointerException.h"

@implementation JavaLangInteger

static IOSClass * JavaLangInteger_TYPE_;

+ (int)MAX_VALUE {
  return JavaLangInteger_MAX_VALUE;
}

+ (int)MIN_VALUE {
  return JavaLangInteger_MIN_VALUE;
}

+ (int)SIZE {
  return JavaLangInteger_SIZE;
}

+ (IOSClass *)TYPE {
  return JavaLangInteger_TYPE_;
}

- (id)initWithInt:(int)value {
  if (self = [super init]) {
    self->value_ = value;
  }
  return self;
}

- (char)charValue {
  return (char) value_;
}

- (int)compareToWithId:(JavaLangInteger *)object {
  if (object != nil && ![object isKindOfClass:[JavaLangInteger class]]) {
    @throw [[JavaLangClassCastException alloc] init];
  }
  if (object == nil) {
    @throw [[JavaLangNullPointerException alloc] init];
  }
  return value_ > ((JavaLangInteger *) nil_chk(object))->value_ ? 1 : (value_ < object->value_ ? -1 : 0);
}

+ (int)compareWithInt:(int)lhs
              withInt:(int)rhs {
  return lhs < rhs ? -1 : (lhs == rhs ? 0 : 1);
}

- (double)doubleValue {
  return value_;
}

- (BOOL)isEqual:(id)o {
  return ([o isKindOfClass:[JavaLangInteger class]]) && (value_ == ((JavaLangInteger *) nil_chk(o))->value_);
}

- (float)floatValue {
  return value_;
}

- (NSUInteger)hash {
  return value_;
}

- (int)intValue {
  return value_;
}

- (long long int)longLongValue {
  return value_;
}

- (short int)shortValue {
  return (short int) value_;
}

- (NSString *)description {
  return [JavaLangInteger toStringWithInt:value_];
}

+ (NSString *)toStringWithInt:(int)value {
  return nil;
}

+ (int)highestOneBitWithInt:(int)i {
  i |= (i >> 1);
  i |= (i >> 2);
  i |= (i >> 4);
  i |= (i >> 8);
  i |= (i >> 16);
  return (i & ~((int) (((unsigned int) i) >> 1)));
}

+ (int)lowestOneBitWithInt:(int)i {
  return (i & (-i));
}

+ (int)numberOfLeadingZerosWithInt:(int)i {
  i |= i >> 1;
  i |= i >> 2;
  i |= i >> 4;
  i |= i >> 8;
  i |= i >> 16;
  return [JavaLangInteger bitCountWithInt:~i];
}

+ (int)numberOfTrailingZerosWithInt:(int)i {
  return [JavaLangInteger bitCountWithInt:(i & -i) - 1];
}

+ (int)bitCountWithInt:(int)i {
  i -= ((i >> 1) & (int) 0x55555555);
  i = (i & (int) 0x33333333) + ((i >> 2) & (int) 0x33333333);
  i = (((i >> 4) + i) & (int) 0x0F0F0F0F);
  i += (i >> 8);
  i += (i >> 16);
  return (i & (int) 0x0000003F);
}

+ (int)rotateLeftWithInt:(int)i
                 withInt:(int)distance {
  if (distance == 0) {
    return i;
  }
  return ((i << distance) | ((int) (((unsigned int) i) >> (-distance))));
}

+ (int)rotateRightWithInt:(int)i
                  withInt:(int)distance {
  if (distance == 0) {
    return i;
  }
  return (((int) (((unsigned int) i) >> distance)) | (i << (-distance)));
}

+ (int)reverseBytesWithInt:(int)i {
  int b3 = (int) (((unsigned int) i) >> 24);
  int b2 = ((int) (((unsigned int) i) >> 8)) & (int) 0xFF00;
  int b1 = (i & (int) 0xFF00) << 8;
  int b0 = i << 24;
  return (b0 | b1 | b2 | b3);
}

+ (int)reverseWithInt:(int)i {
  i = (i & (int) 0x55555555) << 1 | ((i >> 1) & (int) 0x55555555);
  i = (i & (int) 0x33333333) << 2 | ((i >> 2) & (int) 0x33333333);
  i = (i & (int) 0x0F0F0F0F) << 4 | ((i >> 4) & (int) 0x0F0F0F0F);
  return [JavaLangInteger reverseBytesWithInt:i];
}

+ (int)signumWithInt:(int)i {
  return (i == 0 ? 0 : (i < 0 ? -1 : 1));
}

+ (JavaLangInteger *)valueOfWithInt:(int)i {
  if (i < -128 || i > 127) {
    return [[JavaLangInteger alloc] initWithInt:i];
  }
  return IOSObjectArray_Get(nil_chk([JavaLangInteger_valueOfCache CACHE]), i + 128);
}

+ (void)initialize {
  if (self == [JavaLangInteger class]) {
    JavaLangInteger_TYPE_ = (IOSClass *) check_class_cast([[[IOSIntArray arrayWithLength:0] getClass] getComponentType], [IOSClass class]);
  }
}

- (void)copyAllFieldsTo:(JavaLangInteger *)other {
  [super copyAllFieldsTo:other];
  other->value_ = value_;
}

- (const char *)objCType {
  return "i";
}

- (void)getValue:(void *)buffer {
  *((int *) buffer) = value_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "Integer", NULL, 0x1, NULL },
    { "charValue", "byteValue", "B", 0x1, NULL },
    { "compareToWithJavaLangInteger:", "compareTo", "I", 0x1, NULL },
    { "compareWithInt:withInt:", "compare", "I", 0x9, NULL },
    { "doubleValue", NULL, "D", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "floatValue", NULL, "F", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "intValue", NULL, "I", 0x1, NULL },
    { "longLongValue", "longValue", "J", 0x1, NULL },
    { "shortValue", NULL, "S", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "toStringWithInt:", "toString", "Ljava.lang.String;", 0x9, NULL },
    { "highestOneBitWithInt:", "highestOneBit", "I", 0x9, NULL },
    { "lowestOneBitWithInt:", "lowestOneBit", "I", 0x9, NULL },
    { "numberOfLeadingZerosWithInt:", "numberOfLeadingZeros", "I", 0x9, NULL },
    { "numberOfTrailingZerosWithInt:", "numberOfTrailingZeros", "I", 0x9, NULL },
    { "bitCountWithInt:", "bitCount", "I", 0x9, NULL },
    { "rotateLeftWithInt:withInt:", "rotateLeft", "I", 0x9, NULL },
    { "rotateRightWithInt:withInt:", "rotateRight", "I", 0x9, NULL },
    { "reverseBytesWithInt:", "reverseBytes", "I", 0x9, NULL },
    { "reverseWithInt:", "reverse", "I", 0x9, NULL },
    { "signumWithInt:", "signum", "I", 0x9, NULL },
    { "valueOfWithInt:", "valueOf", "Ljava.lang.Integer;", 0x9, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x12, "I" },
    { "MAX_VALUE_", NULL, 0x19, "I" },
    { "MIN_VALUE_", NULL, 0x19, "I" },
    { "SIZE_", NULL, 0x19, "I" },
    { "TYPE_", NULL, 0x19, "Ljava.lang.Class;" },
  };
  static J2ObjcClassInfo _JavaLangInteger = { "Integer", "java.lang", NULL, 0x11, 24, methods, 5, fields, 0, NULL};
  return &_JavaLangInteger;
}

@end
@implementation JavaLangInteger_valueOfCache

static IOSObjectArray * JavaLangInteger_valueOfCache_CACHE_;

+ (IOSObjectArray *)CACHE {
  return JavaLangInteger_valueOfCache_CACHE_;
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [JavaLangInteger_valueOfCache class]) {
    JavaLangInteger_valueOfCache_CACHE_ = [IOSObjectArray arrayWithLength:256 type:[IOSClass classWithClass:[JavaLangInteger class]]];
    {
      for (int i = -128; i <= 127; i++) {
        (void) IOSObjectArray_Set(JavaLangInteger_valueOfCache_CACHE_, i + 128, [[JavaLangInteger alloc] initWithInt:i]);
      }
    }
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "CACHE_", NULL, 0x18, "[Ljava.lang.Integer;" },
  };
  static J2ObjcClassInfo _JavaLangInteger_valueOfCache = { "valueOfCache", "java.lang", "Integer", 0x8, 1, methods, 1, fields, 0, NULL};
  return &_JavaLangInteger_valueOfCache;
}

@end
