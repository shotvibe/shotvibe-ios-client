//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/jre/java/lang/Character.java
//
//  Created by raptor on 1/9/14.
//

#ifndef _JavaLangCharacter_H_
#define _JavaLangCharacter_H_

@class IOSCharArray;
@class IOSClass;
@class IOSIntArray;
@class IOSObjectArray;
@protocol JavaLangCharSequence;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/lang/Comparable.h"

#define JavaLangCharacter_CACHE_LEN 512
#define JavaLangCharacter_MAX_CODE_POINT 1114111
#define JavaLangCharacter_MAX_RADIX 36
#define JavaLangCharacter_MAX_VALUE 0xffff
#define JavaLangCharacter_MIN_CODE_POINT 0
#define JavaLangCharacter_MIN_RADIX 2
#define JavaLangCharacter_MIN_SUPPLEMENTARY_CODE_POINT 65536
#define JavaLangCharacter_MIN_VALUE 0x0000
#define JavaLangCharacter_SIZE 16
#define JavaLangCharacter_serialVersionUID 3786198910865385080LL

@interface JavaLangCharacter : NSObject < JavaIoSerializable, JavaLangComparable > {
 @public
  unichar value_;
}

+ (long long int)serialVersionUID;
+ (unichar)MIN_VALUE;
+ (unichar)MAX_VALUE;
+ (int)MIN_RADIX;
+ (int)MAX_RADIX;
+ (IOSClass *)TYPE;
+ (unichar)MIN_HIGH_SURROGATE;
+ (unichar)MAX_HIGH_SURROGATE;
+ (unichar)MIN_LOW_SURROGATE;
+ (unichar)MAX_LOW_SURROGATE;
+ (unichar)MIN_SURROGATE;
+ (unichar)MAX_SURROGATE;
+ (int)MIN_SUPPLEMENTARY_CODE_POINT;
+ (int)MIN_CODE_POINT;
+ (int)MAX_CODE_POINT;
+ (int)SIZE;
+ (IOSIntArray *)digitKeys;
+ (IOSIntArray *)digitValues;
+ (int)CACHE_LEN;
- (id)initWithChar:(unichar)value;
- (unichar)charValue;
+ (void)checkValidCodePointWithInt:(int)codePoint;
- (int)compareToWithId:(JavaLangCharacter *)c;
+ (int)compareWithChar:(unichar)lhs
              withChar:(unichar)rhs;
+ (JavaLangCharacter *)valueOfWithChar:(unichar)c;
+ (BOOL)isValidCodePointWithInt:(int)codePoint;
+ (BOOL)isSupplementaryCodePointWithInt:(int)codePoint;
+ (BOOL)isHighSurrogateWithChar:(unichar)ch;
+ (BOOL)isLowSurrogateWithChar:(unichar)ch;
+ (BOOL)isSurrogateWithChar:(unichar)ch;
+ (BOOL)isSurrogatePairWithChar:(unichar)high
                       withChar:(unichar)low;
+ (int)charCountWithInt:(int)codePoint;
+ (int)toCodePointWithChar:(unichar)high
                  withChar:(unichar)low;
+ (int)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                   withInt:(int)index;
+ (int)codePointAtWithCharArray:(IOSCharArray *)seq
                        withInt:(int)index;
+ (int)codePointAtWithCharArray:(IOSCharArray *)seq
                        withInt:(int)index
                        withInt:(int)limit;
+ (int)codePointBeforeWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                       withInt:(int)index;
+ (int)codePointBeforeWithCharArray:(IOSCharArray *)seq
                            withInt:(int)index;
+ (int)codePointBeforeWithCharArray:(IOSCharArray *)seq
                            withInt:(int)index
                            withInt:(int)start;
+ (int)toCharsWithInt:(int)codePoint
        withCharArray:(IOSCharArray *)dst
              withInt:(int)dstIndex;
+ (IOSCharArray *)toCharsWithInt:(int)codePoint;
+ (int)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                      withInt:(int)beginIndex
                                      withInt:(int)endIndex;
+ (int)codePointCountWithCharArray:(IOSCharArray *)seq
                           withInt:(int)offset
                           withInt:(int)count;
+ (int)offsetByCodePointsWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                          withInt:(int)index
                                          withInt:(int)codePointOffset;
+ (int)digitWithChar:(unichar)c
             withInt:(int)radix;
- (BOOL)isEqual:(id)object;
+ (unichar)forDigitWithInt:(int)digit
                   withInt:(int)radix;
- (NSUInteger)hash;
+ (unichar)highSurrogateWithInt:(int)codePoint;
+ (unichar)lowSurrogateWithInt:(int)codePoint;
+ (BOOL)isBmpCodePointWithInt:(int)codePoint;
+ (unichar)reverseBytesWithChar:(unichar)c;
- (NSString *)description;
+ (NSString *)toStringWithChar:(unichar)value;
+ (int)indexOfCharWithIntArray:(IOSIntArray *)table
                      withChar:(unichar)c;
- (void)copyAllFieldsTo:(JavaLangCharacter *)other;
@end

BOXED_INC_AND_DEC(Char, charValue, JavaLangCharacter)

@interface JavaLangCharacter_valueOfCache : NSObject {
}

+ (IOSObjectArray *)CACHE;
- (id)init;
@end

#endif // _JavaLangCharacter_H_
