//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/jre/java/lang/AssertionError.java
//
//  Created by raptor on 1/9/14.
//

#include "java/lang/AssertionError.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Throwable.h"

@implementation JavaLangAssertionError

+ (long long int)serialVersionUID {
  return JavaLangAssertionError_serialVersionUID;
}

- (id)init {
  return [super init];
}

- (id)initWithNSString:(NSString *)detailMessage
 withJavaLangThrowable:(JavaLangThrowable *)cause {
  return [super initWithNSString:detailMessage withJavaLangThrowable:cause];
}

- (id)initJavaLangAssertionErrorWithId:(id)detailMessage {
  return [super initWithNSString:[NSString valueOf:detailMessage] withJavaLangThrowable:([detailMessage isKindOfClass:[JavaLangThrowable class]] ? (JavaLangThrowable *) check_class_cast(detailMessage, [JavaLangThrowable class]) : nil)];
}

- (id)initWithId:(id)detailMessage {
  return [self initJavaLangAssertionErrorWithId:detailMessage];
}

- (id)initWithBoolean:(BOOL)detailMessage {
  return [self initJavaLangAssertionErrorWithId:[NSString valueOfBool:detailMessage]];
}

- (id)initWithChar:(unichar)detailMessage {
  return [self initJavaLangAssertionErrorWithId:[NSString valueOfChar:detailMessage]];
}

- (id)initWithInt:(int)detailMessage {
  return [self initJavaLangAssertionErrorWithId:[JavaLangInteger toStringWithInt:detailMessage]];
}

- (id)initWithLong:(long long int)detailMessage {
  return [self initJavaLangAssertionErrorWithId:[JavaLangLong toStringWithLong:detailMessage]];
}

- (id)initWithFloat:(float)detailMessage {
  return [self initJavaLangAssertionErrorWithId:[JavaLangFloat toStringWithFloat:detailMessage]];
}

- (id)initWithDouble:(double)detailMessage {
  return [self initJavaLangAssertionErrorWithId:[JavaLangDouble toStringWithDouble:detailMessage]];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", "AssertionError", NULL, 0x1, NULL },
    { "initWithNSString:withJavaLangThrowable:", "AssertionError", NULL, 0x1, NULL },
    { "initWithId:", "AssertionError", NULL, 0x1, NULL },
    { "initWithBoolean:", "AssertionError", NULL, 0x1, NULL },
    { "initWithChar:", "AssertionError", NULL, 0x1, NULL },
    { "initWithInt:", "AssertionError", NULL, 0x1, NULL },
    { "initWithLong:", "AssertionError", NULL, 0x1, NULL },
    { "initWithFloat:", "AssertionError", NULL, 0x1, NULL },
    { "initWithDouble:", "AssertionError", NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J" },
  };
  static J2ObjcClassInfo _JavaLangAssertionError = { "AssertionError", "java.lang", NULL, 0x1, 9, methods, 1, fields, 0, NULL};
  return &_JavaLangAssertionError;
}

@end
